{"module":{"contents":{"data":{}},"title":"Git Cheatsheet","path":"7-Git/git-cheatsheet","id":"git-cheatsheet","body":"<h2 id=\"setup-you-only-need-to-do-this-part-once-\">Setup (you only need to do this part once)</h2>\n<ul>\n<li>create a fork in github to use for all future pull requests</li>\n<li>clone your fork locally</li>\n<li>set up the main repo as a git remote called upstream</li>\n</ul>\n<pre><code class=\"lang-sh\">git clone git@github.com:[your user name]/[your repo].git\ncd [your repo]\ngit remote add upstream git@github.com:rangle/[your repo].git\n</code></pre>\n<h2 id=\"then-each-time-want-to-make-a-change-\">Then each time want to make a change:</h2>\n<pre><code class=\"lang-sh\"># update your fork from the main repo\ngit fetch upstream\ngit rebase upstream/master\n\n# Create a new branch for your feature\ngit checkout -b my-new-branch\n\n# commit your changes as before\n\n# push your changes\ngit push origin my-new-branch\n\n# create a PR on github between your fork&#39;s feature branch and the main repo\n\n# once you&#39;ve gotten a shipit from another team member:\n\n# get anything from master that has changed\ngit fetch upstream\ngit rebase upstream/master\n\n# Then go to github and merge the branch into master and delete it. Be sure\n# to use the &#39;squash&#39; button in github (should be set as the default in your\n# project&#39;s github settings).\n</code></pre>\n<h2 id=\"cloning-and-working-on-the-repo-directly\">Cloning and working on the repo directly</h2>\n<p>If you have skipped forking you can ignore most of the setup above, just make sure your origin is set to the base repo.</p>\n<h2 id=\"then-each-time-you-want-to-make-a-change-\">Then each time you want to make a change:</h2>\n<pre><code class=\"lang-sh\"># update your local from the main repo\ngit fetch origin\ngit rebase origin/master\n\n# Create a new branch for your feature\ngit checkout -b my-new-branch\n\n# commit your changes as before\n\n# push your changes\ngit push origin my-new-branch\n\n# create a PR on github on the main repo\n\n# once you&#39;ve gotten a shipit from another team member:\n\n# get anything from master that has changed\ngit fetch origin\ngit rebase origin/master\n\n# Then go to github and merge the branch into master and delete it. Be sure\n# to use the &#39;squash&#39; button in github (should be set as the default in your\n# project&#39;s github settings).\n</code></pre>\n"}}