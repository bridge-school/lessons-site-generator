{"module":{"contents":{"data":{"layout":"lesson","title":"Filter","permalink":"/filter/"}},"title":"Array Filter","path":"2-Working-With-Arrays/array-filter","id":"array-filter","body":"<h2 id=\"imagine-trying-to-filter-out-numbers-from-a-list-less-than-18\">Imagine trying to filter out numbers from a list, less than 18</h2>\n<iframe height=\"650\"\n    width=\"100%\"\n    src=\"https://repl.it/repls/CostlySnowPinemarten?lite=true\"\n    scrolling=\"no\"\n    frameborder=\"no\"\n    allowtransparency=\"true\"\n    allowfullscreen=\"true\"\n    sandbox=\"allow-forms\n    allow-pointer-lock\n    allow-popups\n    allow-same-origin\n    allow-scripts\n    allow-modals\"></iframe>\n\n<h2 id=\"challenges\">Challenges</h2>\n<ul>\n<li>Takes multiple lines to handle even the simplest filters</li>\n<li>Can be hard to quickly understand what is happening</li>\n<li>Complexity increases significantly with more complex conditions</li>\n</ul>\n<h2 id=\"what-is-array-filter-\">What is Array.filter?</h2>\n<ul>\n<li>A functional programming tool found natively in javascript</li>\n<li>Creates a new array based off the data in a base array</li>\n<li>Does not modify the original array</li>\n<li>Only the items from the original array that pass a test are copied into a new array</li>\n</ul>\n<h2 id=\"how-does-it-work-\">How does it work?</h2>\n<ul>\n<li>With the same example as above</li>\n</ul>\n<iframe height=\"650\"\n    width=\"100%\"\n    src=\"https://repl.it/repls/GainsboroLittleYellowwhitebutterfly?lite=true\"\n    scrolling=\"no\"\n    frameborder=\"no\"\n    allowtransparency=\"true\"\n    allowfullscreen=\"true\"\n    sandbox=\"allow-forms\n    allow-pointer-lock\n    allow-popups\n    allow-same-origin\n    allow-scripts\n    allow-modals\"></iframe>\n\n<ul>\n<li><code>filter</code> exists as a method on all arrays, it takes one uncalled function as an argument</li>\n<li>This uncalled function is called for each item in the array, as filter iterates over each item</li>\n<li>This function is provided the value currently being iterated over as the first parameter, in the above\ncase, that means that <code>eachAge</code> represents <code>22</code> the first time it is called, then <code>12</code>, and then <code>43</code> and so on.</li>\n<li>This function expects either a <code>true</code> or a <code>false</code> to be returned inside of it.</li>\n<li>In the above example, the first time <code>eachAge</code> is equal to <code>22</code>, and <code>22 &gt;= 18</code> resolves to <code>true</code>. That true is returned, and \nthat means that <code>22</code> is kept in the next array</li>\n</ul>\n<h2 id=\"common-mistakes\">Common Mistakes</h2>\n<ul>\n<li><p>Filter does not modify the original array, it creates and returns a brand new one (which generally, is a very good thing)\n<iframe height=\"650\"\n  width=\"100%\"\n  src=\"https://repl.it/repls/FrequentHumongousTigershark?lite=true\"\n  scrolling=\"no\"\n  frameborder=\"no\"\n  allowtransparency=\"true\"\n  allowfullscreen=\"true\"\n  sandbox=\"allow-forms\n  allow-pointer-lock\n  allow-popups\n  allow-same-origin\n  allow-scripts\n  allow-modals\"></iframe>\n<code>allFriends</code> does not get modified, so later references to all of your friends are still available</p>\n</li>\n<li><p>You should not create a new array and push into it in your filter &#39;loop&#39;</p>\n</li>\n</ul>\n<iframe height=\"650\"\n    width=\"100%\"\n    src=\"https://repl.it/repls/HeavyFamiliarCreature?lite=true\"\n    scrolling=\"no\"\n    frameborder=\"no\"\n    allowtransparency=\"true\"\n    allowfullscreen=\"true\"\n    sandbox=\"allow-forms\n    allow-pointer-lock\n    allow-popups\n    allow-same-origin\n    allow-scripts\n    allow-modals\"></iframe>\nIn the above, the filter is not being correctly used, it is being used as an iterator, no different than <code>forEach</code> or a for loop.\nInstead we should be ensuring that the functions being used inside of our filter are pure.\n\n## Useful Tips\n\n- Chaining together multiple filters, combined with other array methods, can make elaborate requirements seem trivial\n\n<iframe height=\"650\"\n    width=\"100%\"\n    src=\"https://repl.it/repls/AthleticPaltryGermanshepherd?lite=true\"\n    scrolling=\"no\"\n    frameborder=\"no\"\n    allowtransparency=\"true\"\n    allowfullscreen=\"true\"\n    sandbox=\"allow-forms\n    allow-pointer-lock\n    allow-popups\n    allow-same-origin\n    allow-scripts\n    allow-modals\"></iframe>\nThe above does <strong>not</strong> include the friend <code>Manal</code>, because she is not a super friend, even though she has a dog \n\n- Filtering by the position in an array can be a very useful thing\n\n<iframe height=\"650\"\n    width=\"100%\"\n    src=\"https://repl.it/repls/PleasingShorttermIvorygull?lite=true\"\n    scrolling=\"no\"\n    frameborder=\"no\"\n    allowtransparency=\"true\"\n    allowfullscreen=\"true\"\n    sandbox=\"allow-forms\n    allow-pointer-lock\n    allow-popups\n    allow-same-origin\n    allow-scripts\n    allow-modals\"></iframe>\n\n<ul>\n<li>The second parameter passed into the filter callback function is the index of the item currently being iterated over,\nyou can use this in your filters!</li>\n</ul>\n"}}